<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhcexo&#39;s blog</title>
  
  <subtitle>yet another fe blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhcexo.com/"/>
  <updated>2018-04-18T03:23:44.436Z</updated>
  <id>http://zhcexo.com/</id>
  
  <author>
    <name>zhcexo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>同一页面运行wepback不同实例出现冲突的解决办法</title>
    <link href="http://zhcexo.com/2018/04/18/webpack-multiple-instance-on-the-same-page/"/>
    <id>http://zhcexo.com/2018/04/18/webpack-multiple-instance-on-the-same-page/</id>
    <published>2018-04-18T03:03:00.000Z</published>
    <updated>2018-04-18T03:23:44.436Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>对于同一个页面功能由不同的同事开发，都用到了 <code>webpack</code> 以及 <code>CommonsChunkPlugin</code>，最后把打包出来的代码，整合到一起的时候，冲突了。</p><h3 id="问题表现"><a href="#问题表现" class="headerlink" title="问题表现"></a>问题表现</h3><p>各自用 <code>webpack</code> 打包代码没有问题，但是加载到页面上时，代码报错且错误难以定位。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在 <code>webpack</code> 的配置选项里使用 <code>output.jsonpFunction</code>。</p><p>看一下文档里说的：</p><blockquote><p>output.jsonpFunction<br><code>string</code><br>仅用在输出目标为 web，且使用 jsonp 的方式按需加载代码块时。<br>一个命名的 JSONP 函数用于异步加载代码块或者把多个初始化代码块合并到一起时使用（如 CommonsChunkPlugin, AggressiveSplittingPlugin）。<br>当同一个页面上有多个 webpack 实例（源于不同的编译），需要修改这个函数名。<br>如果使用了 <code>output.library</code> 选项，那么这个 <code>library</code> 的命名会自动附加上。</p></blockquote><p>事实上 webpack 并不在全局命名空间下运行，但是 <code>CommonsChunkPlugin</code> 这样的插件会使用异步 JSONP 的方法按需加载代码块。插件会注册一个全局的函数叫 <code>window.webpackJsonp</code>，所以同一个页面上运行多个源自不同 webpack 打包出来的代码时，可能会引起冲突。</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://webpack.js.org/configuration/output/#output-jsonpfunction" target="_blank" rel="noopener">webpack - configuration - output - jsonpfunction</a></p><p><a href="https://medium.com/@cliffers/how-to-run-multiple-webpack-instances-on-the-same-page-and-avoid-any-conflicts-4e2fe0f016d1" target="_blank" rel="noopener">How to run multiple webpack instances on the same page…and avoid any conflicts</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;p&gt;对于同一个页面功能由不同的同事开发，都用到了 &lt;code&gt;webpack&lt;/code&gt; 以及 &lt;code&gt;Commo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用 git 命令备忘</title>
    <link href="http://zhcexo.com/2018/03/23/git-cheat-sheet/"/>
    <id>http://zhcexo.com/2018/03/23/git-cheat-sheet/</id>
    <published>2018-03-23T03:02:43.000Z</published>
    <updated>2018-03-23T03:10:47.347Z</updated>
    
    <content type="html"><![CDATA[<p>导出项目文件</p><p><code>git archive --format zip -o filename.zip HEAD</code></p><p>修剪远程分支</p><p><code>git remote prune origin</code></p><p>显示本地分支与远程分支跟踪关系</p><p><code>git branch -vv</code></p><p>重命名本地分支</p><p><code>git branch -m oldname newname</code></p><p>本地分支与远程分支建立关系</p><p><code>git branch --set-upstream-to=origin/&lt;branch&gt; &lt;cur branch&gt;</code></p><p>强制覆盖本地文件的修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch</span><br><span class="line">git reset --hard origin/master 或</span><br><span class="line">git reset --hard origin/develop 依此类推，使用想用的分支</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;导出项目文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git archive --format zip -o filename.zip HEAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修剪远程分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote prune origin&lt;/code&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="git" scheme="http://zhcexo.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>在 PhpStorm 中集成 git bash</title>
    <link href="http://zhcexo.com/2018/03/22/phpstorm-with-git-bash/"/>
    <id>http://zhcexo.com/2018/03/22/phpstorm-with-git-bash/</id>
    <published>2018-03-22T10:12:34.000Z</published>
    <updated>2018-03-23T03:33:09.172Z</updated>
    
    <content type="html"><![CDATA[<p>直接看图，注意后面的参数 <code>-login -i</code> 不能反了。</p><p><img src="http://of723n9da.bkt.clouddn.com/2016-10-17_220547.jpg" alt="git bash in phpstorm"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接看图，注意后面的参数 &lt;code&gt;-login -i&lt;/code&gt; 不能反了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://of723n9da.bkt.clouddn.com/2016-10-17_220547.jpg&quot; alt=&quot;git bash in phpst
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://zhcexo.com/tags/Tools/"/>
    
  </entry>
  
</feed>
